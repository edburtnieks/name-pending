---
import i18next, { t } from "i18next";
import BaseLayout from "@layouts/BaseLayout.astro";
import { localizePath } from "@utils/localize-path";
import locations from "../_data/_locations.json";
import { data } from "./[location]/_data/_data";

export async function getStaticPaths() {
    return i18next.languages.map((lang) => {
        return locations.map((location) => ({
            params: { lang, location },
        }));
    });
};

const { lang, location } = Astro.params;

const categories = Object.values(data);
const locationCategories = categories.filter(category => Object.hasOwn(category, location));

i18next.changeLanguage(lang as string);
---

<BaseLayout language={i18next.language}>
    <main class="container">
        <h1>{t(`location.country.${location}`) }</h1>
        <menu>
            {locationCategories.map((category) => (
            <li>
                <a href={localizePath(`/locations/${location}${category.link}`)}>
                    {t(`global.${category.titleTranslationKey}`)}
                </a>
            </li>
            ))}
        </menu>
    </main>
</BaseLayout>
